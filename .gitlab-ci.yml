image: inovex/gitlab-ci-android
#image: openjdk:11-jdk

cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .gradle/

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  GIT_SUBMODULE_STRATEGY: recursive
  VERSION_LAST_INCREASE: 0
  VERSION_MAJOR: 4
  VERSION_MINOR: 0
  ANDROID_COMPILE_SDK: "31"
  ANDROID_BUILD_TOOLS: "32.0.0"
  ANDROID_SDK_ROOT: "/opt/android-sdk-linux"

before_script:
  - git remote set-url origin https://${CI_USER}:${CI_PUSH_TOKEN}@${GITLAB_HOST_URL}/android/nettest.git
  - git config --global user.email '${CI_USER_EMAIL}'
  - git config --global user.name '${CI_USER_NAME}'
  - git submodule update --init --recursive
  - echo $JAVA_HOME
  - echo $ANDROID_HOME
  - echo $PATH
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew
  - export VERSION_PATCH=$((BUILD_NUMBER-VERSION_LAST_INCREASE))
  - export VERSION_CODE=$(( (((VERSION_MAJOR*1000000)+(VERSION_MINOR*10000)+VERSION_PATCH))*10))
  - export VERSION_NAME="$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH"
  - export RELEASE_NOTES="Created from commit $CI_PROJECT_URL/commit/$CI_COMMIT_SHA"
  - export BUILD_TIME=$(date +%s%3N)
  - echo "${VERSION_PATCH}"
  - echo "${VERSION_CODE}"
  - echo "${VERSION_NAME}"
  - echo "${RELEASE_NOTES}"
  - echo "${BUILD_TIME}"
  - echo "${GITLAB_HOST_URL}"

stages:
  - init
  - check
  - distribution
  - gitTag

distribution:init:
  stage: init
  script:
    - echo "${BUILD_NUMBER}"
    - NEW_NUMBER=$((++BUILD_NUMBER))
    - echo "next build number $NEW_NUMBER"
    - 'curl --request PUT --header "PRIVATE-TOKEN: ${CI_PUSH_TOKEN}" "https://${GITLAB_HOST_URL}/api/v4/projects/${CI_PROJECT_ID}/variables/BUILD_NUMBER" --form "value=${NEW_NUMBER}"'
  only:
    - develop

check:app-rtr:
  stage: check
  script:
    - ./gradlew :app:ktlint
    - ./gradlew :app:lintLocalDevDebug
  only:
    refs:
      - /fix\/.*/
      - /feature\/.*/
      - /hotfix\/.*/
      - /update\/.*/
      - /test\/.*/

check:app-ont:
  stage: check
  script:
    - ./gradlew :ont:ktlint
    - ./gradlew :ont:lintLocalStageDebug
  only:
    refs:
      - /fix\/.*/
      - /feature\/.*/
      - /hotfix\/.*/
      - /update\/.*/
      - /test\/.*/

check:app-akos:
  stage: check
  script:
    - ./gradlew :akos:ktlint
    - ./gradlew :akos:lintLocalStageDebug
  only:
    refs:
      - /fix\/.*/
      - /feature\/.*/
      - /hotfix\/.*/
      - /update\/.*/
      - /test\/.*/

check:app-akep:
  stage: check
  script:
    - ./gradlew :akep:ktlint
    - ./gradlew :akep:lintLocalStageDebug
  only:
    refs:
      - /fix\/.*/
      - /feature\/.*/
      - /hotfix\/.*/
      - /update\/.*/
      - /test\/.*/

check:app-nkom:
  stage: check
  script:
    - ./gradlew :nkom:ktlint
    - ./gradlew :nkom:lintLocalStageDebug
  only:
    refs:
      - /fix\/.*/
      - /feature\/.*/
      - /hotfix\/.*/
      - /update\/.*/
      - /test\/.*/

check:core:
  stage: check
  script:
    - ./gradlew :core:ktlint
    - ./gradlew :core:lint
  only:
    refs:
      - /fix\/.*/
      - /feature\/.*/
      - /hotfix\/.*/
      - /update\/.*/
      - /test\/.*/

check:controlClient:
  stage: check
  script:
    - ./gradlew :control_client:ktlint
    - ./gradlew :control_client:lint
  only:
    refs:
      - /fix\/.*/
      - /feature\/.*/
      - /hotfix\/.*/
      - /update\/.*/
      - /test\/.*/

check:openRMBTBuild:
  stage: check
  script:
    - rm -rf private
    - ./gradlew app:clean
    - ./gradlew app:assembleOpenRmbtDebug
  only:
    refs:
      - /fix\/.*/
      - /feature\/.*/
      - /hotfix\/.*/
      - /update\/.*/
      - /test\/.*/

.check:uiTests:
  stage: check
  interruptible: true
  timeout: 15m
  allow_failure: true
  variables:
    TEST_AVD_NAME: Pixel_2_API_26
  script:
    - export DISPLAY=:0
    - chmod a+x ./run-ui-tests.sh
    - ./run-ui-tests.sh $TEST_AVD_NAME
  tags:
    - RTR_UI_TESTS
  only:
    refs:
      - develop

distribution:build-rtr:
  stage: distribution
  interruptible: true
  script:
    - echo "version ${VERSION_NAME}(${VERSION_CODE})"
    - ./gradlew app:assembleLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew app:appDistributionUploadLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew app:assembleLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew app:appDistributionUploadLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
  only:
    - develop
  artifacts:
    name: "local-$VERSION_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths:
      - app/build/outputs
    expire_in: 1 month

distribution:build-ont:
  stage: distribution
  interruptible: true
  script:
    - echo "version ${VERSION_NAME}(${VERSION_CODE})"
    - ./gradlew ont:assembleLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew ont:appDistributionUploadLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew ont:assembleLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew ont:appDistributionUploadLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
  only:
    - develop
  artifacts:
    name: "ont-$VERSION_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths:
      - app/build/outputs
    expire_in: 1 month

distribution:build-akep:
  stage: distribution
  interruptible: true
  script:
    - echo "version ${VERSION_NAME}(${VERSION_CODE})"
    - ./gradlew akep:assembleLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew akep:appDistributionUploadLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew akep:assembleLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew akep:appDistributionUploadLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
  only:
    - develop
  artifacts:
    name: "akep-$VERSION_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths:
      - app/build/outputs
    expire_in: 1 month

distribution:build-akos:
  stage: distribution
  interruptible: true
  script:
    - echo "version ${VERSION_NAME}(${VERSION_CODE})"
    - ./gradlew akos:assembleLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew akos:appDistributionUploadLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew akos:assembleLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew akos:appDistributionUploadLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
  only:
    - develop
  artifacts:
    name: "akos-$VERSION_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths:
      - app/build/outputs
    expire_in: 1 month

distribution:build-nkom:
  stage: distribution
  interruptible: true
  script:
    - echo "version ${VERSION_NAME}(${VERSION_CODE})"
    - ./gradlew nkom:assembleLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew nkom:appDistributionUploadLocalStageDebug -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew nkom:assembleLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
    - ./gradlew nkom:appDistributionUploadLocalDemoRelease -PbuildVersionCode=${VERSION_CODE} -PbuildVersionName=${VERSION_NAME} -PreleaseNotes="${RELEASE_NOTES}"
  only:
    - develop
  artifacts:
    name: "nkom-$VERSION_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths:
      - app/build/outputs
    expire_in: 1 month

distribution:docs:
  stage: distribution
  interruptible: true
  script:
    - ./gradlew dokka dokkaMarkdown
  only:
    - develop
  artifacts:
    name: "docs-$VERSION_NAME-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA"
    paths:
      - build_results/javadoc
      - build_results/markdown
    expire_in: 1 month

distribution:tag:
  stage: gitTag
  interruptible: true
  script:
    - export GIT_SSL_NO_VERIFY=1
    - git tag "${VERSION_NAME}"
    - git push origin --tags
  only:
    - develop